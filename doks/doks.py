#!/usr/bin/env python3
"""
ðŸ“š doks: Automatically create READMEs from your code ðŸ“š
====================================================================

Reads the comments from your file and puts them into a servicable .rst
file.

Very suitable for single-file Python libraries that want to keep the code
and documentation in sync without issues

USAGE
-------

.. code-block:: bash

    doks my_file.py [README.rst]

"""
from . import rst
from . import shields
from . import variables
import datetime
import impall
import inspect
import sys

__all__ = ('doks',)


def doks(source, target=None):
    """Print documentation for a file or module

    ARGUMENTS
      path
        path to the Python file or module.

      target
        path to the output file or ``None``, in which case
        output is printed to stdout

    """
    lines = '\n'.join(_doks(source))

    if not rst.render(lines):
        sys.exit(-1)

    if target:
        with open(target, 'w') as fp:
            print(lines, file=fp)
    else:
        print(lines)


def _timestamp():
    return datetime.datetime.now().isoformat()


def _doks(path):
    module = impall.import_file(path)
    module_doc = inspect.getdoc(module) or ''
    def_vars = variables.default_variables(path)

    yield from shields.add_shields(module_doc.splitlines(), def_vars)
    yield ''
    yield from rst.header('API', '*')

    items = getattr(module, '__all__', vars(module))

    for path, value in _children(module, items, module.__name__):
        yield from rst.describe(path, value)

    yield _DOKS_MSG % _timestamp()


def _children(parent, names, module_path):
    for name in names:
        if not name.startswith('_') or name.startswith('__'):
            value = getattr(parent, name)
            if callable(value):
                path = '%s.%s' % (module_path, name)
                yield path, value

                if isinstance(value, type):
                    yield from _children(value, vars(value), path)


_DOKS_URL = 'https://github.com/rec/doks/'
_DOKS_MSG = f'(automatically generated by `doks <{_DOKS_URL}>`_ on %s)'
