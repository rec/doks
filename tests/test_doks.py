import doks
from unittest import TestCase, mock
import os

SAMPLE_FILE = os.path.join(os.path.dirname(__file__), 'sample.py')
TIMESTAMP = '2020-05-28T16:26:07.629835'


class TestDoks(TestCase):
    maxDiff = 100000

    @mock.patch('doks.doks._timestamp', return_value=TIMESTAMP)
    def test_full(self, _timestamp):
        actual = list(doks._doks(SAMPLE_FILE))
        assert actual == EXPECTED


EXPECTED = """\
Top level docs

***
API
***

``tests.sample.function(a, b, c='hello', **kwargs)``
----------------------------------------------------

    "This is function().

Class ``tests.sample.Class``
============================

    Here's class

``tests.sample.Class.__init__(self, *args, **kwargs)``
------------------------------------------------------

    a constructor

``tests.sample.Class.public(self, foo, bar, baz)``
--------------------------------------------------

    A public method.

    ARGUMENTS:
      foo
        a foo

      bar
        a bar

      baz
        no idea

``tests.sample.Class.undocumented(self, foo, bar, baz)``
--------------------------------------------------------


(automatically generated by doks on 2020-05-28T16:26:07.629835)
""".splitlines()
